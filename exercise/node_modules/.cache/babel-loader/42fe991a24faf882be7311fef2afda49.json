{"ast":null,"code":"import _slicedToArray from \"/Users/guya/workspace/Magshimim/solved/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guya/workspace/Magshimim/solved/src/components/LedMatrix/LedMatrix.js\";\nimport React from 'react';\nimport './LedMatrix.css';\nimport { getNormalizedColor, ERROR_MESSAGE } from '../../helpers';\nimport { updateLedColor } from \"../../api\";\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nconst onLedClick = (index, selectedColor) => {\n  updateLedColor(index, selectedColor);\n};\n\nconst LedMatrix = ({\n  leds = [],\n  className\n}) => leds.length > 0 ? React.createElement(\"div\", {\n  className: \"LedMatrix \".concat(className),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, leds.map((color, index) => React.createElement(Led, {\n  color: getNormalizedColor(color),\n  index: index,\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}))) : React.createElement(\"div\", {\n  className: \"LedMatrix-error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, ERROR_MESSAGE);\n\nconst Led = ({\n  color = \"\",\n  index\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  React.createElement(\"div\", {\n    className: \"LedMatrix-led\",\n    style: color ? {\n      backgroundColor: color\n    } : {},\n    onClick: () => onLedClick(index, \"orange\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  });\n};\n\nexport default LedMatrix;","map":{"version":3,"sources":["/Users/guya/workspace/Magshimim/solved/src/components/LedMatrix/LedMatrix.js"],"names":["React","getNormalizedColor","ERROR_MESSAGE","updateLedColor","ClickAwayListener","Button","Paper","onLedClick","index","selectedColor","LedMatrix","leds","className","length","map","color","Led","useState","open","setOpen","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,eAAlD;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,aAAR,KAA0B;AACzCN,EAAAA,cAAc,CAACK,KAAD,EAAQC,aAAR,CAAd;AACH,CAFD;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAC,EAAP;AAAYC,EAAAA;AAAZ,CAAD,KACdD,IAAI,CAACE,MAAL,GAAc,CAAd,GACA;AAAK,EAAA,SAAS,sBAAeD,SAAf,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAGQD,IAAI,CAACG,GAAL,CAAS,CAACC,KAAD,EAAQP,KAAR,KACT,oBAAC,GAAD;AAAK,EAAA,KAAK,EAAEP,kBAAkB,CAACc,KAAD,CAA9B;AAAuC,EAAA,KAAK,EAAEP,KAA9C;AAAqD,EAAA,GAAG,EAAEA,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CAHR,CADA,GASA;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKN,aADL,CAVJ;;AAcA,MAAMc,GAAG,GAAG,CAAC;AAACD,EAAAA,KAAK,GAAC,EAAP;AAAWP,EAAAA;AAAX,CAAD,KAAuB;AAAA,oBACPS,QAAQ,CAAC,KAAD,CADD;AAAA;AAAA,QACxBC,IADwB;AAAA,QAClBC,OADkB;;AAE/B;AACI,IAAA,SAAS,EAAC,eADd;AAEI,IAAA,KAAK,EAAEJ,KAAK,GAAG;AAACK,MAAAA,eAAe,EAAEL;AAAlB,KAAH,GAA6B,EAF7C;AAGI,IAAA,OAAO,EAAE,MAAIR,UAAU,CAACC,KAAD,EAAQ,QAAR,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH,CAPD;;AAUA,eAAeE,SAAf","sourcesContent":["import React from 'react'\nimport './LedMatrix.css'\nimport { getNormalizedColor, ERROR_MESSAGE } from '../../helpers';\nimport {updateLedColor} from \"../../api\";\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nconst onLedClick = (index, selectedColor) => {\n    updateLedColor(index, selectedColor)\n}\n\nconst LedMatrix = ({ leds=[] , className}) =>\n    leds.length > 0 ?\n    <div className={`LedMatrix ${className}`}>\n        {\n            \n            leds.map((color, index) =>\n            <Led color={getNormalizedColor(color)} index={index} key={index}/>\n            )\n        }\n    </div> :\n    <div className=\"LedMatrix-error\">\n        {ERROR_MESSAGE}\n    </div>\n\nconst Led = ({color=\"\", index}) => {\n    const [open, setOpen] = useState(false);\n    <div \n        className=\"LedMatrix-led\" \n        style={color ? {backgroundColor: color}: {}} \n        onClick={()=>onLedClick(index, \"orange\")}\n    />\n}\n    \n\nexport default LedMatrix"]},"metadata":{},"sourceType":"module"}