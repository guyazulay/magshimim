{"ast":null,"code":"import _slicedToArray from \"/Users/guya/workspace/Magshimim/exercise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guya/workspace/Magshimim/exercise/src/components/LedMatrix/LedMatrix.js\";\nimport React, { useState } from 'react';\nimport './LedMatrix.css';\nimport { getNormalizedColor, ERROR_MESSAGE, getEditableColors } from '../../helpers';\nimport { updateLedColorPromise } from \"../../api\";\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport ColorsMenu from '../ColorsMenu/ColorsMenu';\n\nconst LedMatrix = ({\n  leds = [],\n  className\n}) => leds.length > 0 ? React.createElement(\"div\", {\n  className: \"LedMatrix \".concat(className),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, leds.map((color, index) => React.createElement(Led, {\n  color: getNormalizedColor(color),\n  index: index,\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}))) : React.createElement(\"div\", {\n  className: \"LedMatrix-error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Hello Magshimim, seems we have a lot of work to do here !\");\n\nconst Led = ({\n  color = \"\",\n  index\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const onSelectColor = index => selectedColor => {};\n\n  return React.createElement(ClickAwayListener, {\n    onClickAway: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"LedMatrix-led-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nexport default LedMatrix;","map":{"version":3,"sources":["/Users/guya/workspace/Magshimim/exercise/src/components/LedMatrix/LedMatrix.js"],"names":["React","useState","getNormalizedColor","ERROR_MESSAGE","getEditableColors","updateLedColorPromise","ClickAwayListener","ColorsMenu","LedMatrix","leds","className","length","map","color","index","Led","open","setOpen","onSelectColor","selectedColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,SAASC,kBAAT,EAA6BC,aAA7B,EAA4CC,iBAA5C,QAAqE,eAArE;AACA,SAASC,qBAAT,QAAsC,WAAtC;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAKA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG,EAAT;AAAaC,EAAAA;AAAb,CAAD,KACdD,IAAI,CAACE,MAAL,GAAc,CAAd,GACI;AAAK,EAAA,SAAS,sBAAeD,SAAf,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAGQD,IAAI,CAACG,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,KACL,oBAAC,GAAD;AAAK,EAAA,KAAK,EAAEZ,kBAAkB,CAACW,KAAD,CAA9B;AAAuC,EAAA,KAAK,EAAEC,KAA9C;AAAqD,EAAA,GAAG,EAAEA,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAHR,CADJ,GASI;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAVR;;AAcA,MAAMC,GAAG,GAAG,CAAC;AAAEF,EAAAA,KAAK,GAAG,EAAV;AAAcC,EAAAA;AAAd,CAAD,KAA2B;AAAA,oBACXb,QAAQ,CAAC,KAAD,CADG;AAAA;AAAA,QAC5Be,IAD4B;AAAA,QACtBC,OADsB;;AAEnC,QAAMC,aAAa,GAAGJ,KAAK,IAAIK,aAAa,IAAI,CAE/C,CAFD;;AAGA,SACI,oBAAC,iBAAD;AAAmB,IAAA,WAAW,EAAE,MAAM,CAAG,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAOH,CAZD;;AAcA,eAAeX,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport './LedMatrix.css'\nimport { getNormalizedColor, ERROR_MESSAGE, getEditableColors } from '../../helpers';\nimport { updateLedColorPromise } from \"../../api\";\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport ColorsMenu from '../ColorsMenu/ColorsMenu';\n\n\n\n\nconst LedMatrix = ({ leds = [], className }) =>\n    leds.length > 0 ?\n        <div className={`LedMatrix ${className}`}>\n            {\n\n                leds.map((color, index) =>\n                    <Led color={getNormalizedColor(color)} index={index} key={index} />\n                )\n            }\n        </div> :\n        <div className=\"LedMatrix-error\">\n            Hello Magshimim, seems we have a lot of work to do here !\n    </div>\n\nconst Led = ({ color = \"\", index }) => {\n    const [open, setOpen] = useState(false);\n    const onSelectColor = index => selectedColor => {\n\n    }\n    return (\n        <ClickAwayListener onClickAway={() => { }}>\n            <div className=\"LedMatrix-led-container\">\n\n            </div>\n        </ClickAwayListener>\n    )\n}\n\nexport default LedMatrix"]},"metadata":{},"sourceType":"module"}