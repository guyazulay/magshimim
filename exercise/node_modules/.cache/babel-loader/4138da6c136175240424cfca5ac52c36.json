{"ast":null,"code":"const sensorsState = {\n  humidity: \"38\",\n  temperature: \"28.2\",\n  pressure: \"150\",\n  compass: \"36\",\n  led_array: [\"yellow\", \"green\", \"red\", \"white\", \"pink\", \"blue\", \"\", \"\", \"yellow\", \"green\", \"red\", \"white\", \"pink\", \"blue\", \"\", \"\", \"yellow\", \"green\", \"red\", \"white\", \"pink\", \"blue\", \"\", \"\", \"yellow\", \"green\", \"red\", \"white\", \"pink\", \"blue\", \"\", \"\", \"yellow\", \"green\", \"red\", \"white\", \"pink\", \"blue\", \"\", \"\", \"yellow\", \"green\", \"red\", \"white\", \"pink\", \"blue\", \"\", \"\", \"yellow\", \"green\", \"red\", \"white\", \"pink\", \"blue\", \"\", \"\", \"yellow\", \"green\", \"red\", \"white\", \"pink\", \"blue\", \"\", \"\"]\n};\nexport const getSensorsState = () => {\n  //TBD: api call using axios\n  const promise = new Promise((resolve, reject) => {\n    resolve(sensorsState);\n  });\n  return promise;\n};","map":{"version":3,"sources":["/Users/guya/workspace/Magshimim/solved/src/api.js"],"names":["sensorsState","humidity","temperature","pressure","compass","led_array","getSensorsState","promise","Promise","resolve","reject"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,IADO;AAEjBC,EAAAA,WAAW,EAAC,MAFK;AAGjBC,EAAAA,QAAQ,EAAE,KAHO;AAIjBC,EAAAA,OAAO,EAAC,IAJS;AAKjBC,EAAAA,SAAS,EAAE,CAAC,QAAD,EAAU,OAAV,EAAkB,KAAlB,EAAwB,OAAxB,EAAgC,MAAhC,EAAuC,MAAvC,EAA8C,EAA9C,EAAiD,EAAjD,EACC,QADD,EACU,OADV,EACkB,KADlB,EACwB,OADxB,EACgC,MADhC,EACuC,MADvC,EAC8C,EAD9C,EACiD,EADjD,EAEC,QAFD,EAEU,OAFV,EAEkB,KAFlB,EAEwB,OAFxB,EAEgC,MAFhC,EAEuC,MAFvC,EAE8C,EAF9C,EAEiD,EAFjD,EAGC,QAHD,EAGU,OAHV,EAGkB,KAHlB,EAGwB,OAHxB,EAGgC,MAHhC,EAGuC,MAHvC,EAG8C,EAH9C,EAGiD,EAHjD,EAIC,QAJD,EAIU,OAJV,EAIkB,KAJlB,EAIwB,OAJxB,EAIgC,MAJhC,EAIuC,MAJvC,EAI8C,EAJ9C,EAIiD,EAJjD,EAKC,QALD,EAKU,OALV,EAKkB,KALlB,EAKwB,OALxB,EAKgC,MALhC,EAKuC,MALvC,EAK8C,EAL9C,EAKiD,EALjD,EAMC,QAND,EAMU,OANV,EAMkB,KANlB,EAMwB,OANxB,EAMgC,MANhC,EAMuC,MANvC,EAM8C,EAN9C,EAMiD,EANjD,EAOC,QAPD,EAOU,OAPV,EAOkB,KAPlB,EAOwB,OAPxB,EAOgC,MAPhC,EAOuC,MAPvC,EAO8C,EAP9C,EAOiD,EAPjD;AALM,CAArB;AAiBA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC;AACA,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAC3CD,IAAAA,OAAO,CAACT,YAAD,CAAP;AACH,GAFe,CAAhB;AAIA,SAAOO,OAAP;AACH,CAPM","sourcesContent":["const sensorsState = {\n    humidity: \"38\",\n    temperature:\"28.2\",\n    pressure: \"150\",\n    compass:\"36\",\n    led_array: [\"yellow\",\"green\",\"red\",\"white\",\"pink\",\"blue\",\"\",\"\",\n                \"yellow\",\"green\",\"red\",\"white\",\"pink\",\"blue\",\"\",\"\",\n                \"yellow\",\"green\",\"red\",\"white\",\"pink\",\"blue\",\"\",\"\",\n                \"yellow\",\"green\",\"red\",\"white\",\"pink\",\"blue\",\"\",\"\",\n                \"yellow\",\"green\",\"red\",\"white\",\"pink\",\"blue\",\"\",\"\",\n                \"yellow\",\"green\",\"red\",\"white\",\"pink\",\"blue\",\"\",\"\",\n                \"yellow\",\"green\",\"red\",\"white\",\"pink\",\"blue\",\"\",\"\",\n                \"yellow\",\"green\",\"red\",\"white\",\"pink\",\"blue\",\"\",\"\"\n    ]\n}\n\n\nexport const getSensorsState = () => {\n    //TBD: api call using axios\n    const promise = new Promise((resolve, reject)=>{\n        resolve(sensorsState)\n    })\n\n    return promise\n}"]},"metadata":{},"sourceType":"module"}