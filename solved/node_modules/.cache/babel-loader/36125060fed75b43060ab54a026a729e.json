{"ast":null,"code":"import _slicedToArray from \"/Users/guya/workspace/Magshimim/solved/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guya/workspace/Magshimim/solved/src/components/LedMatrix/LedMatrix.js\";\nimport React, { useState } from 'react';\nimport './LedMatrix.css';\nimport { getNormalizedColor, ERROR_MESSAGE, getEditableColors } from '../../helpers';\nimport { updateLedColor } from \"../../api\";\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport ColorsMenu from '../ColorsMenu/ColorsMenu';\n\nconst LedMatrix = ({\n  leds = [],\n  className\n}) => leds.length > 0 ? React.createElement(\"div\", {\n  className: \"LedMatrix \".concat(className),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, leds.map((color, index) => React.createElement(Led, {\n  color: getNormalizedColor(color),\n  index: index,\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}))) : React.createElement(\"div\", {\n  className: \"LedMatrix-error\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, ERROR_MESSAGE);\n\nconst onSelectColor = ({\n  index,\n  selectedColor,\n  setOpen\n}) => {\n  updateLedColor(index, color);\n  setOpen(false);\n};\n\nconst Led = ({\n  color = \"\",\n  index\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"LedMatrix-led-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"LedMatrix-led\",\n    style: color ? {\n      backgroundColor: color\n    } : {},\n    onClick: () => setOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(ClickAwayListener, {\n    onClickAway: () => setOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, open ? React.createElement(Paper, {\n    className: \"LedMatrix-led-paper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(ColorsMenu, {\n    colors: getEditableColors(),\n    className: \"LedMatrix-led-colors-menu\" //onSelect={}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })) : null)));\n};\n\nexport default LedMatrix;","map":{"version":3,"sources":["/Users/guya/workspace/Magshimim/solved/src/components/LedMatrix/LedMatrix.js"],"names":["React","useState","getNormalizedColor","ERROR_MESSAGE","getEditableColors","updateLedColor","ClickAwayListener","Button","Paper","ColorsMenu","LedMatrix","leds","className","length","map","color","index","onSelectColor","selectedColor","setOpen","Led","open","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,iBAAP;AACA,SAASC,kBAAT,EAA6BC,aAA7B,EAA4CC,iBAA5C,QAAqE,eAArE;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAKA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAC,EAAP;AAAYC,EAAAA;AAAZ,CAAD,KAClBD,IAAI,CAACE,MAAL,GAAc,CAAd,GACI;AAAK,EAAA,SAAS,sBAAeD,SAAf,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAGQD,IAAI,CAACG,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,KACT,oBAAC,GAAD;AAAK,EAAA,KAAK,EAAEd,kBAAkB,CAACa,KAAD,CAA9B;AAAuC,EAAA,KAAK,EAAEC,KAA9C;AAAqD,EAAA,GAAG,EAAEA,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CAHR,CADJ,GASI;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKb,aADL,CAVJ;;AAcA,MAAMc,aAAa,GAAG,CAAC;AAACD,EAAAA,KAAD;AAAQE,EAAAA,aAAR;AAAuBC,EAAAA;AAAvB,CAAD,KAAqC;AACvDd,EAAAA,cAAc,CAACW,KAAD,EAAOD,KAAP,CAAd;AACAI,EAAAA,OAAO,CAAC,KAAD,CAAP;AACH,CAHD;;AAKA,MAAMC,GAAG,GAAG,CAAC;AAACL,EAAAA,KAAK,GAAC,EAAP;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAAA,oBACPf,QAAQ,CAAC,KAAD,CADD;AAAA;AAAA,QACxBoB,IADwB;AAAA,QAClBF,OADkB;;AAE/B,SACA;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,eADd;AAEI,IAAA,KAAK,EAAEJ,KAAK,GAAG;AAACO,MAAAA,eAAe,EAAEP;AAAlB,KAAH,GAA6B,EAF7C;AAGI,IAAA,OAAO,EAAE,MAAII,OAAO,CAAC,KAAD,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,iBAAD;AAAmB,IAAA,WAAW,EAAE,MAAIA,OAAO,CAAC,IAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,GACH,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACI,IAAA,MAAM,EAAEjB,iBAAiB,EAD7B;AAEI,IAAA,SAAS,EAAC,2BAFd,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADG,GAQD,IATN,CADA,CANJ,CADA;AAuBH,CAzBD;;AA6BA,eAAeM,SAAf","sourcesContent":["import React ,{useState} from 'react'\nimport './LedMatrix.css'\nimport { getNormalizedColor, ERROR_MESSAGE, getEditableColors } from '../../helpers';\nimport {updateLedColor} from \"../../api\";\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport ColorsMenu from '../ColorsMenu/ColorsMenu';\n\n\n\n\nconst LedMatrix = ({ leds=[] , className}) =>\nleds.length > 0 ?\n    <div className={`LedMatrix ${className}`}>\n        {\n            \n            leds.map((color, index) =>\n            <Led color={getNormalizedColor(color)} index={index} key={index}/>\n            )\n        }\n    </div> :\n    <div className=\"LedMatrix-error\">\n        {ERROR_MESSAGE}\n    </div>\n\nconst onSelectColor = ({index, selectedColor, setOpen}) => {\n    updateLedColor(index,color)\n    setOpen(false)\n}\n\nconst Led = ({color=\"\", index}) => {\n    const [open, setOpen] = useState(false);\n    return (\n    <div className=\"LedMatrix-led-container\">\n        <div \n            className=\"LedMatrix-led\" \n            style={color ? {backgroundColor: color}: {}} \n            onClick={()=>setOpen(false)}\n        />\n        <ClickAwayListener onClickAway={()=>setOpen(true)}>\n        <div>\n          {open ? (\n            <Paper className=\"LedMatrix-led-paper\">\n                <ColorsMenu \n                    colors={getEditableColors()} \n                    className=\"LedMatrix-led-colors-menu\"\n                    //onSelect={}\n                />\n            </Paper>\n          ) : null}\n        </div>\n      </ClickAwayListener>\n    </div>\n    \n)\n}\n    \n\n\nexport default LedMatrix"]},"metadata":{},"sourceType":"module"}