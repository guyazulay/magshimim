{"ast":null,"code":"const sensorsState = {\n  humidity: \"38\",\n  temperature: \"28.2\",\n  pressure: \"\"\n};\nexport const getSensorsState = () => {\n  //TBD: api call using axios\n  const promise = new Promise((resolve, reject) => {\n    resolve(new Error());\n  });\n  return promise;\n};","map":{"version":3,"sources":["/Users/guya/workspace/Magshimim/solved/src/api.js"],"names":["sensorsState","humidity","temperature","pressure","getSensorsState","promise","Promise","resolve","reject","Error"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,IADO;AAEjBC,EAAAA,WAAW,EAAC,MAFK;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAArB;AAOA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC;AACA,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAC3CD,IAAAA,OAAO,CAAC,IAAIE,KAAJ,EAAD,CAAP;AACH,GAFe,CAAhB;AAIA,SAAOJ,OAAP;AACH,CAPM","sourcesContent":["const sensorsState = {\n    humidity: \"38\",\n    temperature:\"28.2\",\n    pressure: \"\"\n}\n\n\nexport const getSensorsState = () => {\n    //TBD: api call using axios\n    const promise = new Promise((resolve, reject)=>{\n        resolve(new Error())\n    })\n\n    return promise\n}"]},"metadata":{},"sourceType":"module"}